openapi: 3.1.0
info:
  title: MyFirstAPI
  description: Implementación básica de una API para gestionar usuarios
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Servidor local

paths:
  /api/v1/users:
    get:
      summary: Obtener todos los usuarios
      operationId: getUsers
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseDTO'
    post:
      summary: Registrar un nuevo usuario
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationDTO'
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDTO'

  /api/v1/users/{id}:
    get:
      summary: Obtener un usuario por ID
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
        '404':
          description: Usuario no encontrado
    delete:
      summary: Eliminar un usuario por ID
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuario eliminado correctamente

  /api/v1/users/{id}/password:
    patch:
      summary: Actualizar la contraseña de un usuario
      operationId: updatePassword
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordUpdateDTO'
      responses:
        '200':
          description: Contraseña actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
        '400':
          description: Contraseña actual incorrecta

components:
  info:
    title: MyFirstAPI
    description: Implementación básica de una API RestFul
  schemas:
    UserResponseDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        fullName:
          type: string
        dateOfBirth:
          type: string
          format: date
        rol:
          type: string
          enum: [USER, ADMIN]

    UserRegistrationDTO:
      type: object
      required: [email, fullName, password, dateBirth, rol]
      properties:
        email:
          type: string
          format: email
        fullName:
          type: string
        password:
          type: string
        dateOfBirth:
          type: string
          format: date
        rol:
          type: string
          enum: [USER, ADMIN]

    PasswordUpdateDTO:
      type: object
      required: [currentPassword, newPassword]
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
